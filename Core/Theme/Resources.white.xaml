<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <!--MenuItemButton-->
    <Style TargetType="Button" x:Key="MenuItemButton">
        <Setter Property="Background" Value="#E1E1E1"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Margin" Value="20"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}" BorderBrush="Black" BorderThickness="1" CornerRadius="15">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="#282b30"/>

            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#CBCBCB"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="#5A5A5A"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <!--ImageButton-->
    <Style TargetType="Button" x:Key="ImageButton">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" BorderBrush="Transparent" BorderThickness="1" CornerRadius="10">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#7289DA"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="#99aab5"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--Global Style-->
    
    <!--Label-->
    <Style TargetType="Label">
        <Setter Property="Foreground" Value="Black"/>
    </Style>
    
    <Style TargetType="TextBlock">
        <Setter Property="Foreground" Value="Black"/>
    </Style>

    <Style TargetType="TextBox">
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0 0 0 2"/>
    </Style>

    <!--Grid-->
    <Style TargetType="Grid">
        <Setter Property="Background" Value="#ffffff"/>
    </Style>
    <!--ListBoxItem-->
    <Style TargetType="ListBoxItem">
        <Setter Property="BorderThickness" Value="3"/>
        <Setter Property="BorderBrush" Value="#23272a"/>
        <Setter Property="Background" Value="#E1E1E1"/>
        <Setter Property="Margin" Value="5"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <Border BorderThickness="{TemplateBinding Border.BorderThickness}"
                  Padding="{TemplateBinding Control.Padding}"
                  BorderBrush="{TemplateBinding Border.BorderBrush}"
                  Background="{TemplateBinding Panel.Background}"
                  Name="Bd"
                  CornerRadius="15"
                  SnapsToDevicePixels="True">
                        <ContentPresenter Content="{TemplateBinding ContentControl.Content}"
                               ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}"
                               ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}"
                               HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                               VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                               SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <!--MainColor-->
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="#F3F3F3"/>
                            <Setter Property="BorderBrush" Value="#7289da"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#FFFFFF"/>
                            <Setter Property="BorderBrush" Value="#7289da"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--TabItem-->

    <Style TargetType="TabItem">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TabItem" >
                    <Border   Name="BorderPanel" BorderThickness="3" BorderBrush="	#424549" Margin="5" CornerRadius="12">
                        <Grid  HorizontalAlignment="Center" Name="Panel" Margin="5 0 5 0" Background="Transparent">
                            <ContentPresenter x:Name="ContentSite"
                     VerticalAlignment="Center"
                     HorizontalAlignment="Center"
                     ContentSource="Header"
                     Margin="10,2"/>
                        </Grid>
                    </Border>
                     
                   
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="BorderPanel" Property="Background" Value="#878787" />
                            <Setter TargetName="BorderPanel" Property="BorderBrush" Value="#7289da" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="False">
                            <Setter TargetName="BorderPanel" Property="Background" Value="#CBCBCB" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="BorderPanel" Property="Background" Value="	#E1E1E1" />
                            <Setter TargetName="BorderPanel" Property="BorderBrush" Value="#7289da" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--Button-->
    <Style TargetType="Button">
        <Setter Property="Background" Value="#FFFFFF"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" BorderBrush="Transparent" BorderThickness="1" CornerRadius="10">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#E1E1E1"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="#5A5A5A"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <Style TargetType="Border" x:Key="MainBorderTheme">
        <Setter Property="BorderThickness" Value="4"/>
        <Setter Property="CornerRadius" Value="15"/>
        <Setter Property="Background" Value="#E1E1E1"/>
        <Setter Property="BorderBrush" Value="#7289da"/>
    </Style>
    
    <Style TargetType="Border" x:Key="InnerBorderTheme">
        <Setter Property="BorderThickness" Value="3"/>
        <Setter Property="Margin" Value="5"/>
        <Setter Property="CornerRadius" Value="20"/>
        <Setter Property="Background" Value="#C4C4C4"/>
        <Setter Property="BorderBrush" Value="#7289da"/>
    </Style>
    
    <Style TargetType="Border" x:Key="InnerBorderThemeTwo">
        <Setter Property="BorderThickness" Value="3"/>
        <Setter Property="Margin" Value="5"/>
        <Setter Property="CornerRadius" Value="20"/>
        <Setter Property="Background" Value="#A7A7A7"/>
        <Setter Property="BorderBrush" Value="#7289da"/>
    </Style>
    
    <!--Scroll bar-->
    <Style TargetType="ScrollBar" x:Key="x">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ScrollBar">
                    <Border CornerRadius="1" Background="Green" BorderBrush="Red" BorderThickness="0"  Height="100"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!---Main Bar -->
    <Style TargetType="Border" x:Key="BackgroundBorder">
        <Setter Property="Padding" Value="5"/>
        <Setter Property="Margin" Value="5"/>
        <Setter Property="BorderThickness" Value="3"/>
        <Setter Property="CornerRadius" Value="15"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Background" Value="#B4B4B4"/>
        <Setter Property="BorderBrush" Value="#7289da"/>
    </Style>


    <Style x:Key="ComboBoxTest2" TargetType="ComboBox">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid Background="Transparent">
                        <ToggleButton Grid.Column="2" Focusable="false" IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}" >
                            <ToggleButton.Template>
                                <ControlTemplate>
                                    <Grid Background="Transparent">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="5*" />
                                            <ColumnDefinition Width="*" />
                                        </Grid.ColumnDefinitions>
                                        <Border x:Name="Border"  Grid.ColumnSpan="2" CornerRadius="5 5 0 0" Background="#E1E1E1" BorderBrush="#7289da" BorderThickness="3" />
                                        <Border Grid.Column="0" CornerRadius="5,0,0,5"  Margin="1"  Background="Transparent"  BorderBrush="Transparent" BorderThickness="0,0,1,0" />
                                        <Path x:Name="Arrow" Grid.Column="1"  Fill="#7289da" HorizontalAlignment="Center" VerticalAlignment="Center" Data="M 0 0 L 4 4 L 8 0 Z"/>
                                    </Grid>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="ToggleButton.IsMouseOver" Value="true">
                                            <Setter TargetName="Border" Property="Background" Value="#B4B4B4" />
                                        </Trigger>
                                       
                                        <Trigger Property="ToggleButton.IsChecked" Value="true">
                                            <Setter TargetName="Border" Property="Background" Value="#CBCBCB" />
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </ToggleButton.Template>
                        </ToggleButton>
                        <ContentPresenter Name="ContentSite" IsHitTestVisible="False"  Content="{TemplateBinding SelectionBoxItem}" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" Margin="3"  />
                        <TextBox x:Name="PART_EditableTextBox" Visibility="Hidden" IsReadOnly="{TemplateBinding IsReadOnly}"/>
                        <Popup Name="Popup" Placement="Bottom" IsOpen="{TemplateBinding IsDropDownOpen}" AllowsTransparency="True"  Focusable="False" PopupAnimation="Slide">
                            <Grid Background="Transparent"  Name="DropDown" SnapsToDevicePixels="True" MinWidth="{TemplateBinding ActualWidth}" MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                <Border Padding="5" x:Name="DropDownBorder" Background="#B4B4B4"  BorderThickness="3 0 3 3" BorderBrush="#7289da" CornerRadius="0 0 10 10"/>
                                <ScrollViewer SnapsToDevicePixels="True">
                                    <StackPanel IsItemsHost="True" />
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
        </Style.Triggers>
    </Style>

    <Style TargetType="RadioButton" >
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <BulletDecorator Background="Transparent" Cursor="Hand">
                        <BulletDecorator.Bullet>
                            <Grid Height="16" Width="16" Background="Transparent">
                                <Border Name="RadioOuter" Background="Transparent" BorderBrush="#7289da" BorderThickness="2" CornerRadius="50" />
                                <Border CornerRadius="50" Margin="4" Name="RadioMark" Background="Black" Visibility="Hidden" />
                            </Grid>
                        </BulletDecorator.Bullet>
                        <TextBlock Margin="3,1,0,0" Foreground="#FF3E3E3E" FontFamily="Calibri" FontSize="12">
                     <ContentPresenter />
                        </TextBlock>
                    </BulletDecorator>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter TargetName="RadioMark" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="RadioOuter" Property="BorderBrush" Value="#7289da" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



</ResourceDictionary>